/usr/lib/jvm/java-8-oracle/bin/java -javaagent:/opt/idea/idea-IC-183.5429.30/lib/idea_rt.jar=33469:/opt/idea/idea-IC-183.5429.30/bin -Dfile.encoding=UTF-8 -classpath /usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/deploy.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jfxrt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-8-oracle/jre/lib/javaws.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfxswt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/management-agent.jar:/usr/lib/jvm/java-8-oracle/jre/lib/plugin.jar:/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/home/willi/linux_cloud/distributed_systems/project/out/production/classes:/home/willi/.gradle/caches/modules-2/files-2.1/com.typesafe.akka/akka-actor_2.12/2.5.11/88c0033b7d29f4700a928bc221b1124e8e22b5e2/akka-actor_2.12-2.5.11.jar:/home/willi/.gradle/caches/modules-2/files-2.1/org.scala-lang.modules/scala-java8-compat_2.12/0.8.0/1e6f1e745bf6d3c34d1e2ab150653306069aaf34/scala-java8-compat_2.12-0.8.0.jar:/home/willi/.gradle/caches/modules-2/files-2.1/org.scala-lang/scala-library/2.12.4/7663f74ef944453c86cc7e6597ed33e9281f6412/scala-library-2.12.4.jar:/home/willi/.gradle/caches/modules-2/files-2.1/com.typesafe/config/1.3.2/d6ac0ce079f114adce620f2360c92a70b2cb36dc/config-1.3.2.jar it.distr.NodeSystem
# (1) Init received!   holder: 2   neighbors: [0, 2]
(0) Init received!   holder: 1   neighbors: [1]
(3) Init received!   holder: 2   neighbors: [2]
(2) Token injected!   holder: 2   neighbors: [1, 3, 4]
(5) Init received!   holder: 4   neighbors: [4]
(4) Init received!   holder: 2   neighbors: [2, 5, 6]
(6) Init received!   holder: 4   neighbors: [4]
# Sending request message to node 1
Sending request message to node 1
# (1) onRequest() - request received from: 1
# Crashing node 1
# Reviving node 1
# Sending request message to node 1
# (1) onRequest() - request forwarded to: 2
(2) onRequest() - request received from: 1
(1)   token: N   holder: 2   requests: [1]   CS: N
(1) onRequest() - request received from: 1
(1) onRequest() - duplicated request received from 1 (did he crash?) request was dropped
(1) onCrashBegin() - entering crash mode
(1)   token: N   holder: -1   requests: []   CS: N
(1) onCrashEnd() - starting recovery operations
(0) onRecoveryInfoRequest() - sending recovery information
# Sending request message to node 1
# # Crashing node 1
# Sending request message to node 1
# Reviving node 1
# (1)   token: N   holder: -1   requests: []   CS: N
(1) onCrashEnd() - starting recovery operations
(2) onRequest() - privilege sent to: 1
(2)   token: N   holder: 1   requests: []   CS: N
(2) onRecoveryInfoRequest() - sending recovery information
(0)   token: N   holder: 1   requests: []   CS: N
(2)   token: N   holder: 1   requests: []   CS: N
# Sending request message to node 1
# (0) onRecoveryInfoRequest() - sending recovery information
(1)   token: N   holder: -1   requests: []   CS: N
(2) onRecoveryInfoRequest() - sending recovery information
(1) onRecoveryInfoResponse() - received recovery information from: 0
(1)   token: N   holder: -1   requests: []   CS: N
(1) onRecoveryInfoResponse() - received recovery information from: 2
(1) onRecoveryInfoResponse() - all recovery info received
(1) onRequest() - request received from: 1
(0)   token: N   holder: 1   requests: []   CS: N
(2)   token: N   holder: 1   requests: []   CS: N
(1) onRequest() - privilege sent to: 1
(1)   token: Y   holder: 1   requests: [1]   CS: N
(1) onRequest() - request received from: 1
(1) onRequest() - duplicated request received from 1 (did he crash?) request was dropped
(1) onCrashBegin() - entering crash mode
(1) assertion - changeMode() messageQueue not empty
(1)   token: N   holder: -1   requests: []   CS: N
(1) assertion - dispatchAllWaitingMessages() called not in normal mode
(1) onRequest() - request received from: 1
(1) assertion - no ActorRef found for my holderId
[ERROR] [05/30/2019 20:26:58.129] [network-akka.actor.default-dispatcher-5] [akka://network/user/$b] null
java.lang.NullPointerException
	at it.distr.Node.tellWrapper(Node.java:133)
	at it.distr.Node.tellWrapper(Node.java:120)
	at it.distr.Node.onRequest(Node.java:223)
	at it.distr.Node$MessageBroker.dispatchMessage(Node.java:523)
	at it.distr.Node$MessageBroker.dispatchAllWaitingMessages(Node.java:509)
	at it.distr.Node$MessageBroker.changeMode(Node.java:473)
	at it.distr.Node.onRecoveryInfoResponse(Node.java:429)
	at it.distr.Node$MessageBroker.dispatchMessage(Node.java:529)
	at it.distr.Node$MessageBroker.messageArrived(Node.java:567)
	at it.distr.Node.brokerDispatcher(Node.java:590)
	at akka.japi.pf.UnitCaseStatement.apply(CaseStatements.scala:26)
	at akka.japi.pf.UnitCaseStatement.apply(CaseStatements.scala:21)
	at scala.PartialFunction.applyOrElse(PartialFunction.scala:123)
	at scala.PartialFunction.applyOrElse$(PartialFunction.scala:122)
	at akka.japi.pf.UnitCaseStatement.applyOrElse(CaseStatements.scala:21)
	at scala.PartialFunction$OrElse.applyOrElse(PartialFunction.scala:171)
	at akka.actor.Actor.aroundReceive(Actor.scala:517)
	at akka.actor.Actor.aroundReceive$(Actor.scala:515)
	at akka.actor.AbstractActor.aroundReceive(AbstractActor.scala:147)
	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:590)
	at akka.actor.ActorCell.invoke(ActorCell.scala:559)
	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257)
	at akka.dispatch.Mailbox.run(Mailbox.scala:224)
	at akka.dispatch.Mailbox.exec(Mailbox.scala:234)
	at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at akka.dispatch.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)

#
Process finished with exit code 0
